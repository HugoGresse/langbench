name: langbench

concurrency:
  group: langbench
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      num_runs:
        description: Number of runs
        required: true
        type: number
        default: 10
      data_size:
        description: Number of integers to generate
        required: true
        type: number
        default: 140000000
      log_level:
        description: Log level
        required: true
        type: choice
        options:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
        default: INFO
      commit:
        description: Commit the results
        required: true
        type: boolean
        default: true

jobs:
  langbench:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      registry:
        image: registry:2
        ports:
          - 80:5000
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: pip

      - name: set up buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: restore buildx cache
        uses: actions/cache/restore@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ inputs.data_size }}-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            buildx-${{ inputs.data_size }}-
            buildx-

      - name: install dependencies
        run: pip install -r requirements.txt

      - name: run langbench
        run: |
          ./langbench.py \
            --data-size ${{ inputs.data_size }} \
            --num-runs ${{ inputs.num_runs }} \
            --log-level ${{ inputs.log_level }} \
            --docker-registry localhost \
            --docker-build-context langbench-base=docker-image://localhost/langbench-base:latest \
            --docker-cache /tmp/.buildx-cache \
            --push-base-image

      - name: commit results
        if: inputs.commit
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add csv README.md
          git commit -m "update results"
          git push

      - name: save buildx cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ inputs.data_size }}-${{ hashFiles('**/Dockerfile') }}
